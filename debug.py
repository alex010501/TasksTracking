from datetime import date
from TaskBase.logic import get_session, add_employee, add_project_with_stages
from TaskBase.models import ProjectStage, Task
from sqlalchemy.orm import Session

def seed_data():
    session: Session = get_session()

    # === СОТРУДНИКИ ===
    employees_info = [
        (1, "Макровец Владимир Вячеславович", "Руководитель отдела", date(2025, 1, 1)),
        (2, "Лященко Леонид Алексеевич", "Младший инженер-робототехник", date(2025, 2, 14)),
        (3, "Сайбель Тимофей Александрович", "Разработчик", date(2025, 3, 24)),
        (4, "Мазурин Александр Алексеевич", "Инженер-робототехник", date(2025, 4, 9)),
        (5, "Финягин Даниил Николаевич", "Инженер-робототехник", date(2025, 6, 10)),
    ]

    surname_to_id = {}

    for fixed_id, full_name, position, start in employees_info:
        emp = add_employee(session, full_name, position, start)
        session.refresh(emp)  # получаем реальный ID
        surname_to_id[full_name.split()[0]] = emp.id

    # === ПРОЕКТ + ЭТАПЫ ===
    project = add_project_with_stages(
        session,
        "Щербинская типография. Автоматизация пресс-тигеля",
        "Автоматизация пресс-тигеля в типографии",
        date(2025, 9, 15)
    )
    stages = session.query(ProjectStage).filter_by(project_id=project.id).order_by(ProjectStage.id).all()

    # === ЗАДАЧИ ===
    def add_full_task(stage_index: int, name: str, diff: int,
                      executor_surnames: list[str],
                      created: date, deadline: date,
                      done: bool):
        executor_ids = [surname_to_id[surname] for surname in executor_surnames]
        task = Task(
            name=name,
            description="",
            created_date=created,
            deadline=deadline,
            difficulty=diff,
            status="выполнено" if done else "в работе",
            completed_date=deadline if done else None,
            executor_ids=",".join(map(str, executor_ids)),
            project_id=project.id,
            stage_id=stages[stage_index].id
        )
        session.add(task)

    tasks_data = [
        (0, "Выезд на площадку заказчика", 1, ["Макровец", "Мазурин"], date(2025,5,15), date(2025,5,20), True),
        (0, "Анализ возможности автоматизации пресс-тигеля", 2, ["Мазурин"], date(2025,5,20), date(2025,5,25), True),
        (0, "Проработка методов снятия данных с тигеля", 2, ["Мазурин"], date(2025,5,20), date(2025,6,1), True),
        (1, "Проработка компоновки ячейки", 2, ["Макровец"], date(2025,5,20), date(2025,6,1), True),
        (1, "Подбор робота", 1, ["Мазурин"], date(2025,5,20), date(2025,6,1), True),
        (1, "Расчёт цикла работы", 1, ["Мазурин"], date(2025,5,20), date(2025,6,1), True),
        (1, "Первичный расчёт металлоконструкций", 2, ["Макровец"], date(2025,5,20), date(2025,6,1), True),
        (2, "Проработка структуры комплекса", 2, ["Мазурин", "Финягин"], date(2025,6,1), date(2025,6,5), True),
        (2, "Проработка интерфейсов взаимодействия", 2, ["Мазурин"], date(2025,6,1), date(2025,6,5), True),
        (2, "Готовый концепт РТК", 4, ["Мазурин", "Финягин"], date(2025,6,5), date(2025,6,15), True),
        (3, "Спецификация металлоконструкций", 2, ["Финягин"], date(2025,6,15), date(2025,6,30), True),
        (3, "Спецификация электрики", 2, ["Финягин"], date(2025,6,15), date(2025,6,30), True),
        (3, "Спецификация пневматики", 2, ["Финягин"], date(2025,6,15), date(2025,6,30), True),
        (4, "Подготовка цифрового двойника РТК", 4, ["Мазурин"], date(2025,6,30), date(2025,7,5), True),
        (4, "Написание структуры программы робота", 2, ["Мазурин"], date(2025,7,5), date(2025,7,10), True),
        (4, "Формирование окончательных спецификаций", 2, ["Финягин"], date(2025,7,5), date(2025,7,15), True),
        (5, "Сборка металлоконструкций СШК", 2, ["Макровец", "Мазурин", "Финягин"], date(2025,7,15), date(2025,7,22), True),
        (5, "Установка робота и его шкафа управления", 1, ["Мазурин", "Финягин"], date(2025,7,22), date(2025,7,25), True),
        (5, "Установка компрессора, проведение пневмолиний", 2, ["Финягин"], date(2025,7,25), date(2025,8,15), False),
        (5, "Электромонтаж силовых электролиний", 2, ["Мазурин", "Финягин"], date(2025,7,25), date(2025,8,15), False),
        (5, "Монтаж слаботочных линий", 2, ["Мазурин", "Финягин"], date(2025,7,25), date(2025,8,15), False),
        (6, "Юстировка робота", 1, ["Мазурин"], date(2025,7,25), date(2025,7,29), True),
        (6, "Калибровка инструментов и баз", 2, ["Мазурин", "Финягин"], date(2025,7,25), date(2025,7,29), True),
        (6, "Перенос структуры программы на робота", 2, ["Мазурин"], date(2025,7,25), date(2025,7,29), True),
        (6, "Подготовка интерфейса RMS", 2, ["Мазурин", "Сайбель"], date(2025,7,29), date(2025,7,31), True),
        (7, "Тестовые запуски подпрограмм", 1, ["Мазурин"], date(2025,7,29), date(2025,7,31), True),
        (7, "Тест без станка", 2, ["Мазурин"], date(2025,7,29), date(2025,7,31), True),
        (7, "Отработка со станком", 4, ["Мазурин", "Финягин"], date(2025,8,1), date(2025,8,20), False),
        (7, "Запуск РТК с RMS", 4, ["Мазурин", "Сайбель"], date(2025,7,31), date(2025,8,1), True),
        (8, "Паспорт РТК", 2, ["Макровец", "Мазурин", "Финягин"], date(2025,8,20), date(2025,8,31), False),
        (8, "Инструкция к RMS", 2, ["Мазурин", "Сайбель"], date(2025,8,20), date(2025,8,31), False),
        (8, "Инструкция к пульту", 1, ["Мазурин"], date(2025,8,20), date(2025,8,31), False),
        (8, "Программы на ПЛК", 1, ["Мазурин", "Финягин"], date(2025,8,20), date(2025,8,31), False),
        (8, "Электро- и пневмосхемы", 1, ["Мазурин", "Финягин"], date(2025,8,20), date(2025,8,31), False),
        (9, "Лекция по ТБ и ОТ", 1, ["Мазурин", "Финягин"], date(2025,9,1), date(2025,9,15), False),
        (9, "Ознакомление с документацией", 1, ["Мазурин"], date(2025,9,1), date(2025,9,15), False),
        (9, "Ознакомление со схемами", 1, ["Финягин"], date(2025,9,1), date(2025,9,15), False),
    ]

    for row in tasks_data:
        add_full_task(*row)

    session.commit()
    print("✅ Данные успешно внесены.")

if __name__ == "__main__":
    seed_data()