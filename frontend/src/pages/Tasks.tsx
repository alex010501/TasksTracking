import { useEffect, useState } from "react";
import { searchTasks } from "../api";
import type{ Task } from "../types";
import { ScoreBadge } from "../components/common/ScoreBadge";
import { StatusLabel } from "../components/common/StatusLabel";

export default function TasksPage() {
  const [query, setQuery] = useState("");
  const [statusFilter, setStatusFilter] = useState("–≤—Å–µ");
  const [tasks, setTasks] = useState<Task[]>([]);
  const [expandedTaskIds, setExpandedTaskIds] = useState<Set<number>>(new Set());

  const today = new Date();
  const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 2).toISOString().split("T")[0];
  const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 1).toISOString().split("T")[0];

  const [fromDate, setFromDate] = useState(startOfMonth);
  const [toDate, setToDate] = useState(endOfMonth);

  const loadTasks = async () => {
    const allTasks: Task[] = await searchTasks(query);
    const filtered = allTasks.filter((task) => {
      const inPeriod =
        (!fromDate || new Date(task.created_date) >= new Date(fromDate)) &&
        (!toDate || new Date(task.created_date) <= new Date(toDate));

      const statusMatch =
        statusFilter === "–≤—Å–µ" ||
        (statusFilter === "–í—ã–ø–æ–ª–Ω–µ–Ω–æ" && task.status === "–í—ã–ø–æ–ª–Ω–µ–Ω–æ") ||
        (statusFilter === "–í —Ä–∞–±–æ—Ç–µ" && task.status === "–í —Ä–∞–±–æ—Ç–µ") ||
        (statusFilter === "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ" && task.status === "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ");

      return inPeriod && statusMatch && task.project_id === null;
    });

    setTasks(filtered);
  };

  useEffect(() => {
    loadTasks();
  }, [query, statusFilter, fromDate, toDate]);

  const toggleExpand = (id: number) => {
    setExpandedTaskIds((prev) => {
      const next = new Set(prev);
      next.has(id) ? next.delete(id) : next.add(id);
      return next;
    });
  };

  const handleCurrentMonth = () => {
    setFromDate(startOfMonth);
    setToDate(endOfMonth);
  };

  const handleCurrentWeek = () => {
    const now = new Date();
    const firstDay = new Date(now.setDate(now.getDate() - now.getDay() + 1)); // Monday
    const lastDay = new Date(now.setDate(firstDay.getDate() + 4)); // Friday

    setFromDate(firstDay.toISOString().split("T")[0]);
    setToDate(lastDay.toISOString().split("T")[0]);
  };

  return (
    <div style={{ padding: "2rem" }}>
      <h2>üß© –ó–∞–¥–∞—á–∏</h2>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div className="w-full flex justify-center">
        <div>
          <label>–ü–æ–∏—Å–∫:</label>
          &#160;&#160;&#160;
          <input
            type="text"
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
            className="border px-2 py-1 rounded"
            style={{ width: "59vw" }}
          />
        </div>
      </div>
      <h3></h3>
      <div style={{ display: "flex", gap: "2rem", alignItems: "flex-end", marginBottom: "1rem" }}>
        <div>
          <label>–°—Ç–∞—Ç—É—Å:</label>
          &#160;&#160;
          <select
            value={statusFilter}
            onChange={(e) => setStatusFilter(e.target.value)}
            className="border px-2 py-1 rounded w-full"
          >
            <option value="–≤—Å–µ">–í—Å–µ</option>
            <option value="–≤ —Ä–∞–±–æ—Ç–µ">–í —Ä–∞–±–æ—Ç–µ</option>
            <option value="–≤—ã–ø–æ–ª–Ω–µ–Ω–æ">–í—ã–ø–æ–ª–Ω–µ–Ω–æ</option>
            <option value="–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ">–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ</option>
          </select>
        </div>

        <div>
          <label>–°:</label>&#160;&#160;
          <input type="date" value={fromDate} onChange={(e) => setFromDate(e.target.value)} className="border px-2 py-1 rounded" />
        </div>
        <div>
          <label>–ü–æ:</label>&#160;&#160;
          <input type="date" value={toDate} onChange={(e) => setToDate(e.target.value)} className="border px-2 py-1 rounded" />
        </div>

        <div>
          <button onClick={handleCurrentWeek} className="bg-gray-200 px-3 py-1 rounded hover:bg-gray-300">
            –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è
          </button>{" "}
          &#160;&#160;&#160;&#160;
          <button onClick={handleCurrentMonth} className="bg-gray-200 px-3 py-1 rounded hover:bg-gray-300">
            –¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
          </button>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á */}
      <div className="space-y-4">
        {tasks.map((task) => {
          const expanded = expandedTaskIds.has(task.id);
          const executors = task.executor_ids.split(",").map((e) => e.trim()).filter(Boolean);
          const score = task.status === "–í—ã–ø–æ–ª–Ω–µ–Ω–æ" ? task.difficulty : 0;

          return (
            <div key={task.id} className="border rounded p-3 shadow-sm bg-white">
              <div className="flex justify-between items-center">
                <div>
                  <h4 className="text-lg font-semibold">{task.name}</h4>
                  <div className="text-sm text-gray-500">–î–µ–¥–ª–∞–π–Ω: {task.deadline}</div>
                  <div className="text-sm text-gray-500">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏: {executors.join(", ") || "‚Äì"}</div>
                  <div className="text-sm text-gray-500">–ë–∞–ª–ª—ã: <ScoreBadge value={score} refValue={task.difficulty}/></div>
                  <div className="text-sm text-gray-500">–°–ª–æ–∂–Ω–æ—Å—Ç—å: {task.difficulty}</div>
                  <div className="mt-1">
                    <StatusLabel status={task.status} />
                  </div>
                </div>
                <button onClick={() => toggleExpand(task.id)} className="text-2xl text-gray-400 hover:text-gray-600">
                  {expanded ? "‚ñ≤" : "‚ñº"}
                </button>
              </div>

              {expanded && (
                <div className="mt-3 text-sm text-gray-700 space-y-2">
                  <div><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {task.name}</div>
                  <div><strong>–î–∞—Ç–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏:</strong> {new Date(task.created_date).toLocaleDateString()}</div>
                  {/* –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ */}
                  <div className="flex gap-2">
                    <button className="px-3 py-1 bg-blue-600 text-white rounded">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <button className="px-3 py-1 bg-green-600 text-white rounded">–ó–∞–≤–µ—Ä—à–∏—Ç—å</button>
                  </div>
                </div>
              )}
            </div>
          );
        })}
      </div>
    </div>
  );
}
